name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to create (e.g., v1.5.1)'
        required: true
      release_name:
        description: 'Release title'
        required: false
      prerelease:
        description: 'Mark as prerelease'
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build
        run: mvn -B -Dgpg.skip=true -Dmaven.javadoc.failOnError=false clean package

      - name: Create tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${{ inputs.tag }}
          git push origin ${{ inputs.tag }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            target/*.jar

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          name: ${{ inputs.release_name || inputs.tag }}
          prerelease: ${{ inputs.prerelease }}
          files: |
            target/*.jar
name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: mvn clean package -DskipTests
      
    - name: Generate Sources JAR
      run: mvn source:jar
      
    - name: Generate Javadoc JAR
      run: mvn javadoc:javadoc
      
    - name: List build artifacts
      run: |
        echo "=== Target directory contents ==="
        ls -la target/
        echo "=== Looking for JAR files ==="
        find target/ -name "*.jar" -type f
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: HotbarManager API ${{ github.ref_name }}
        body: |
          ## HotbarManager API ${{ github.ref_name }}
          
          ### What's New
          - Complete API interface for HotbarManager plugin
          - Event system for addon development
          - Example addons included (HotbarStatsAddon, HotbarSyncAddon)
          - Comprehensive documentation and guides
          - Maven integration and GitHub Actions CI/CD
          
          ### Downloads
          - **API JAR**: Main API library
          - **Sources JAR**: Source code for IDE support
          - **Javadoc JAR**: Complete documentation
          
          ### Installation
          
          **Option 1: Use JAR files directly**
          Download the JAR files and add them to your project's classpath.
          
          **Option 2: Build from source**
          ```bash
          git clone https://github.com/Pro-Nil/HotbarManager-API.git
          cd HotbarManager-API
          mvn clean package
          ```
          
          ### Documentation
          - [API Documentation](https://github.com/Pro-Nil/HotbarManager-API/blob/main/README.md)
          - [Example Addons](https://github.com/Pro-Nil/HotbarManager-API/tree/main/examples)
          - [JAR Usage Guide](https://github.com/Pro-Nil/HotbarManager-API/blob/main/JAR_USAGE_GUIDE.md)
          
          ### Example Addons
          - **HotbarStatsAddon**: Tracks player statistics and usage patterns
          - **HotbarSyncAddon**: Team-based hotbar synchronization system
        files: |
          target/*.jar
          README.md
          LICENSE
          pom.xml
          JAR_USAGE_GUIDE.md
        draft: false
        prerelease: false